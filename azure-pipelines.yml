# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master

pool:
  name: LinuxAgentPool
  demands:
    - JDK -equals 11
    - Terraform -equals Yes
variables:
  isMaster: $[eq(variables['Build.sourceBranch'], 'refs/heads/master')]
stages:
  - stage: CheckingTheAgent
    condition: and(succeeded(), eq(variables.isMaster, true))
    pool:
      name: LinuxAgentPool
      demands:
        - Terraform -equals Yes
    variables:
      stage_version: "2.0.0"
      stage_email: "sraghu486@gmail.com"
    jobs:
      - job: CheckingTerraformPackerAndansibleTrivy
        variables:
          job_version: "3.0.0"
          job_email: "sraghu486@gmail.com"
        timeoutInMinutes: 5
        steps:
          - script: echo $(Build.BuildId)
            displayName: "Display The Build-ID"
          - script: terraform version && packer version && ansible --version && trivy --version
            displayName: "Display Terraform & Packer version"
          - script: docker version && docker ps && docker images && docker ps -a
            displayName: "Display Docker Version"
          - script: pwd && ls -al
            displayName: "Display List & Folders"
  - stage: SASTWithSonarQube
    condition: and(succeeded(), eq(variables.isMaster, true))
    pool:
      name: LinuxAgentPool
      demands:
        - JDK -equals 11
    variables:
      SONAR_TOKEN: "0b7a2f7aba5c470f0e327dbb96104193a22213f2"
    jobs:
      - job: RunningSASTWithSonarqube
        timeoutInMinutes: 10
        steps:
          #SonarQube User Token need to be generated and used in the ServiceConnection.
          #Also change name of the project and artifactId(line 6 & 14) to ado-spring-boot-app-dev in POM.
          #No need to create a project in sonarqube as its created automatically.
          - task: SonarQubePrepare@5
            inputs:
              SonarQube: "devopsb32_sonarqube-token"
              scannerMode: "Other"
              #projectKey: 'sqp_63da7bac31bd4496f2ee1170156659ea8c782c28'-NotNeeded
              #projectName: 'ado-spring-boot-app-dev'-NotNeeded
              projectVersion: "$(Build.BuildId)"
            displayName: "Preparing SonarQube Config"
          - task: Maven@4
            inputs:
              mavenPomFile: "pom.xml"
              publishJUnitResults: false
              javaHomeOption: "JDKVersion"
              mavenVersionOption: "Default"
              mavenAuthenticateFeed: false
              effectivePomSkip: false
              sonarQubeRunAnalysis: true
              sqMavenPluginVersionChoice: "latest"
            displayName: "Running SonarQube Maven Analysis"
          - script: mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=devopsb32_sonarqube-token
          - task: sonar-buildbreaker@8
            inputs:
              SonarQube: "devopsb32_sonarqube-token"
            displayName: "SAST Job Fail or Pass"
